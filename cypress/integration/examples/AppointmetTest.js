import Appointment from './PageObjects/Appointment'
import LoginPage from './PageObjects/LoginPage'
import Exception from './PageObjects/Exception'
import LoginDetails from './PageObjects/LoginDetails'
import Calendar from './PageObjects/Calendar'
import BookingHistory from './PageObjects/BookingHistory'
import AddPatient from './PageObjects/AddPatient'
import { callbackify } from 'util'
describe('Appointment', () => 
{
    it('Verify booking an appointment for existing patient', () => 
    {
     const e=new Exception()   
     const login=new LoginPage()
     const a=new Appointment()
     const details=new LoginDetails()
     const cal=new Calendar()
     login.visit("live") 
     e.except()
     details.loginDetails(4)
     login.Checkcheckbox()
     login.submit()
     //a.facilityDropdown("Facility_four(QA)")
     a.searchBox("Tester check")
     a.apptcalendar()
     a.timeselect()
     a.selectPatient("Tester check")
     a.selectProviderResoruceType("resource-option","tester")
     a.selectService("Dermo")
     a.addApptNote("hello tester")
     cal.selectDate("02/01/2022","12:40AM")
    })

    // it('Verify booking an appointment for new patient', () => 
    // {
    //  const e=new Exception()   
    //  const login=new LoginPage()
    //  const a=new Appointment()
    //  const details=new LoginDetails()
    //  const cal=new Calendar()
    //  const add = new AddPatient()
    //  login.visit("live") 
    //  e.except()
    //  details.loginDetails(4)
    //  login.Checkcheckbox()
    //  login.submit()
    //  //a.facilityDropdown("Facility_four(QA)")
    //  a.apptcalendar()
    //  a.timeselect()
    //  add.addPatient("Tester","check","11/08/1997","Male","11111111109","kakodkarsairaj+ljjkoko@gmail.com")
    //  a.selectProviderResoruceType("resource-option","Fever test")
    //  a.selectService("Dermo")
    //  a.addApptNote("hello tester")
    //  cal.selectDate("02/01/2022","09:40AM","booked")
    // })

    // it('Verify validation for unique email id and phone number fields on calendar schedule', () => 
    // {
    //  const e=new Exception()   
    //  const login=new LoginPage()
    //  const a=new Appointment()
    //  const details=new LoginDetails()
    //  const cal=new Calendar()
    //  const add = new AddPatient()
    //  login.visit("live")
    //  e.except()
    //  details.loginDetails(4)
    //  login.Checkcheckbox()
    //  login.submit()
    //  //a.facilityDropdown("Facility_four(QA)")
    //  a.apptcalendar()
    //  a.timeselect()
    //  add.addPatient("Tester","check","11/08/1997","Male","11111111122","tes105521@gmail.com")
    //  a.selectProviderResoruceType("resource-option","Fever test")
    //  a.selectService("Dermo")
    //  a.addApptNote("hello tester")
    //  cal.selectDate("02/01/2022","09:40PM")
    //  add.validation()
    // })

    // it('Verify if i can navigate to the patient dashboard', () => 
    // {
    //  const e=new Exception()   
    //  const login=new LoginPage()
    //  const a=new Appointment()
    //  const details=new LoginDetails()
    //  const cal=new Calendar()
    //  login.visit("live")
    //  e.except()
    //  details.loginDetails(4)
    //  login.Checkcheckbox()
    //  login.submit()
    //  //a.facilityDropdown("Facility_four(QA)")
    //  a.apptcalendar()
    //  cal.selecttimeslot("0:00","24:00")
    //  a.appoimtmentdashpopup("Tester check")
    // })

    // it('Verify if an appoimtment can be updated from calendar pop-up', () => 
    // {
    //  const e=new Exception()   
    //  const login=new LoginPage()
    //  const a=new Appointment()
    //  const details=new LoginDetails()
    //  const cal=new Calendar()
    //  const b= new BookingHistory()
    //  login.visit("live")
    //  e.except()
    //  details.loginDetails(4)
    //  login.Checkcheckbox()
    //  login.submit()
    //  //a.facilityDropdown("Facility_four(QA)")
    //  a.apptcalendar()
    //  cal.selecttimeslot("0:00","24:00")
    //  a.appoimtmentupdatepopup("Tester check")
    //  a.selectProviderResoruceType("provider-option","Tom Provider one","zoom")
    //  a.selectService("Dermo")
    //  a.addApptNote("hello tester")
    //  b.status("Booked")
    //  cal.selecteditdate("02/01/2022","09:40AM","booked")
    // })

    // it('Verify if user can add sticky notes', () => 
    // {
    //  const e=new Exception()   
    //  const login=new LoginPage()
    //  const a=new Appointment()
    //  const details=new LoginDetails()
    //  login.visit("live")
    //  e.except()
    //  details.loginDetails(4)
    //  login.Checkcheckbox()
    //  login.submit()
    //  //a.facilityDropdown("Facility_four(QA)")
    //  a.searchBox("Tester check")
    //  a.stickynotes("i am robot")
    // })

    // it('Verify if an appointment can be deleted from the calender schedule', () => 
    // {
    //  const e=new Exception()   
    //  const login=new LoginPage()
    //  const a=new Appointment()
    //  const details=new LoginDetails()
    //  const cal=new Calendar()
    //  login.visit("live")
    //  e.except()
    //  details.loginDetails(4)
    //  login.Checkcheckbox()
    //  login.submit()
    //  //a.facilityDropdown("Facility_four(QA)")
    //  a.apptcalendar()
    //  cal.selecttimeslot("0:00","24:00")
    //  a.appoimtmentdeletepopup("Tester check")
    // })

    // it('Verify if i can search appointments based on selected providers', () => 
    // {
    //  const e=new Exception()   
    //  const login=new LoginPage()
    //  const a=new Appointment()
    //  const details=new LoginDetails()
    //  const cal=new Calendar()
    //  login.visit("dev")
    //  e.except()
    //  details.loginDetails(1)
    //  login.Checkcheckbox()
    //  login.submit()
    //  a.todaysappt()
    //  a.searchprovider("provider one","Provider Two")
    //  cal.selecttimeslot("0:00","24:00")
    // })
})
